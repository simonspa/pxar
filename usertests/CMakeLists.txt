# ----------------------------------------------------------------------
# -- generate PixUserTestFactory.cc
# ----------------------------------------------------------------------

SET(FACTORYSOURCE "PixUserTestFactory.cc")
FILE(GLOB FHEADERS "*.hh")
LIST(REMOVE_ITEM FHEADERS "${PROJECT_SOURCE_DIR}/usertests/PixUserTestFactory.hh")

FILE(WRITE ${FACTORYSOURCE}
"// ---------------------------------------------------------------------------- \n"
"// This file is autogenerated. Do NOT edit. There is no need to edit this file! \n"
"// Your changes will be lost after the next invocation of cmake -D XXXX .. \n"
"// ---------------------------------------------------------------------------- \n"
"#include <iostream> \n"
"#include <algorithm> \n"
"#include \"log.h\" \n"
" \n"
"#include \"PixUserTestFactory.hh\" \n"
)

FOREACH(loop_var ${FHEADERS})
string(REPLACE "${PROJECT_SOURCE_DIR}/usertests/" "" testname0 ${loop_var} )
FILE(APPEND ${FACTORYSOURCE} "#include \"${testname0}\" \n")
ENDFOREACH(loop_var)

FILE(APPEND ${FACTORYSOURCE} 
" \n"
"using namespace std; \n"
"using namespace pxar; \n"
" \n"
" \n"
"PixUserTestFactory* PixUserTestFactory::fInstance = 0; \n"
" \n"
"// ---------------------------------------------------------------------- \n"
"PixUserTestFactory* PixUserTestFactory::instance() { \n"
"  if (0 == fInstance) { \n"
"    fInstance = new PixUserTestFactory(); \n"
"  } \n"
"  return fInstance; \n"
"} \n"
" \n"
"// ---------------------------------------------------------------------- \n"
"PixTest* PixUserTestFactory::createTest(string name, PixSetup *a) { \n"
"  ::transform(name.begin(), name.end(), name.begin(), ::tolower); \n"
)

FOREACH(loop_var ${FHEADERS})
STRING(REPLACE "${PROJECT_SOURCE_DIR}/usertests/" "" testname1 ${loop_var} )
STRING(REPLACE ".hh" "" testname2 ${testname1} )
STRING(REPLACE "PixTest" "" testname3 ${testname2} )
STRING(TOLOWER ${testname3} testname4)
FILE(APPEND ${FACTORYSOURCE} 
"  if (!name.compare(\"${testname4}\")) return new ${testname2}(a, \"${testname3}\"); \n")
ENDFOREACH(loop_var)

FILE(APPEND ${FACTORYSOURCE} 
"  return 0; \n"
"} \n"
" \n"
)


# ----------------------------------------------------------------------
# -- now do the usual stuff
# ----------------------------------------------------------------------

# for now, we also need includes from the "util" folder
INCLUDE_DIRECTORIES( . ${PROJECT_SOURCE_DIR}/ana ${PROJECT_SOURCE_DIR}/util ${PROJECT_SOURCE_DIR}/tests)
FILE(GLOB USERTESTLIB_SOURCES "*.cc")

# fill list of header files 
FILE(GLOB USERTESTLIB_HEADERS "*.hh" )
LIST(REMOVE_ITEM USERTESTLIB_HEADERS "PixUserTestFactory.hh")

SET(MY_INCLUDE_DIRECTORIES ${PROJECT_SOURCE_DIR}/core/api ${PROJECT_SOURCE_DIR}/core/utils ${PROJECT_SOURCE_DIR}/tests ${PROJECT_SOURCE_DIR}/usertests ${PROJECT_SOURCE_DIR}/util ${PROJECT_SOURCE_DIR}/ana ${ROOT_INCLUDE_DIR} )

# set everything needed for the root dictonary and create the
# dictionary
set(USERTESTLIB_DICTIONARY ${CMAKE_CURRENT_BINARY_DIR}/usertestsDict.cxx)
ROOT_GENERATE_DICTIONARY_OLD("${USERTESTLIB_HEADERS}" "${USERTESTLIB_DICTIONARY}" "${MY_INCLUDE_DIRECTORIES}")


# create a shared library
ADD_LIBRARY( pxarusertests SHARED ${USERTESTLIB_SOURCES} ${USERTESTLIB_DICTIONARY} )
# link against our core library, the util lib, the root stuff, and the USB libs
target_link_libraries(pxarusertests pxartests pxarutil pxarana ${PROJECT_NAME} ${ROOT_LIBRARIES} ${FTDI_LINK_LIBRARY} )

# install the lib in the appropriate directory
INSTALL(TARGETS pxarusertests
  RUNTIME DESTINATION bin
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib)



